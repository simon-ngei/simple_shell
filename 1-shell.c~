#include "shell.h"

/**
 * itterative - returns true if shell is interactive mode
 * @for: struct address
 * Return: 1 if interactive mode, 0 otherwise
 */
int itterative(for_t *for)
{
return (isatty(STDIN_FILENO) && for->readfd <= 2);
}

/**
 * is_strive - checks if character is a delimeter
 * @i: the char to check
 * @strive: the delimeter string
 * Return: 1 if true, 0 if false
 */
int is_strive(char i, char *strive)
{
while (*strive)
if (*strive++ == i)
return (1);
return (0);
}

/**
 *_shellic - checks for alphabetic character
 *@i: The character to input
 *Return: 1 if c is alphabetic, 0 otherwise
 */

int _shellic(int i)
{
if ((i >= 'a' && i <= 'z') || (i >= 'A' && i <= 'Z'))
return (1);
else
return (0);
}

/**
 *_alower - converts a string to an integer
 *@k: the string to be converted
 *Return: 0 if no numbers in string, converted number otherwise
 */

int _alower(char *k)
{
int j, fig = 1, flag = 0, output;
unsigned int result = 0;

for (j = 0;  k[j] != '\0' && flag != 2; j++)
{
if (k[j] == '-')
fig *= -1;

if (k[j] >= '0' && k[j] <= '9')
{
flag = 1;
result *= 10;
result += (k[j] - '0');
}
else if (flag == 1)
flag = 2;
}

if (fig == -1)
output = -result;
else
output = result;
return (output);
}
