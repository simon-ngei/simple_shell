#include "shell.h"
char **my_commands = NULL;
char *len = NULL;
char *my_shell = NULL;
int wstatus = 0;

/**
 * main - entry point
 * @argc: nom of arguments passed
 * @argv: arguments to be passed
 * Return: always 0
 */


int main(int argc __attribute__((unused)), char **argv)
{
char **first_command = NULL;
int j, sec_command = 0;
size_t p = 0;

signal(SIGINT, ctrl_c_handler);
my_shell = argv[0];
while (1)
{
non_interactive();
print(" ($) ", STDOUT_FILENO);
if (getline(&line, &p, stdin) == -1)
{
free(len);
exit(wstatus);
}
remove_newline(len);
remove_comment(len);
my_commands = tokenizer(len, ";");
for (j = 0; my_commands[j] != NULL; j++)
{
first_command = tokenizer(my_commands[j], " ");
if (first_command[0] == NULL)
{
free(first_command);
break;
}
sec_command = parse_command(first_command[0]);

/* initializer -   */
initializer(first_command, sec_command);
free(first_command);
}
free(my_commands);
}
free(line);
return (wstatus);
}
